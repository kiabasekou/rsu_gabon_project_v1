{"version":3,"file":"hermes.js","sourceRoot":"","sources":["../../../src/js/profiling/hermes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,sBAAsB,EAAE,MAAM,wBAAwB,CAAC;AA4ChE;;;;GAIG;AACH,MAAM,UAAU,iCAAiC,CAAC,UAAkB;IAClE,MAAM,sBAAsB,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvD,MAAM,IAAI,GAAG,sBAAsB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,sBAAsB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IAC1G,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,QAAQ,GAAW,GAAG,CAAC;AAE7B;;GAEG;AACH,MAAM,UAAU,cAAc;IAC5B,MAAM,OAAO,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;IACxC,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IAED,MAAM,uBAAuB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC;IACtD,OAAO,uBAAuB,CAAC;AACjC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,aAAa;IAC3B,MAAM,aAAa,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;IAC7C,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO,IAAI,CAAC;KACb;IACD,OAAO,sBAAsB,CAAC,aAAa,CAAC,CAAC;AAC/C,CAAC","sourcesContent":["import { NATIVE } from '../wrapper';\nimport { convertToSentryProfile } from './convertHermesProfile';\nimport type { RawThreadCpuProfile } from './types';\n\nexport type StackFrameId = number;\nexport type MicrosecondsSinceBoot = string;\n\nexport interface TraceEvent {\n  name: string;\n  ph: string;\n  cat: string;\n  pid: number;\n  ts: MicrosecondsSinceBoot;\n  tid: string;\n  args: {\n    name?: string;\n  };\n}\n\nexport interface Sample {\n  cpu: string;\n  name: string;\n  ts: MicrosecondsSinceBoot;\n  pid: number;\n  tid: string;\n  weight: string;\n  sf: StackFrameId;\n}\n\nexport interface StackFrame {\n  line?: string;\n  column?: string;\n  funcLine?: string;\n  funcColumn?: string;\n  name: string;\n  category: string;\n  parent?: number;\n}\n\nexport interface Profile {\n  traceEvents: TraceEvent[];\n  samples: Sample[];\n  stackFrames: Record<string, StackFrame>;\n}\n\n/**\n * Hermes Profile Stack Frame Name contains function name and file path.\n *\n * `foo(/path/to/file.js:1:2)` -> `foo`\n */\nexport function parseHermesStackFrameFunctionName(hermesName: string): string {\n  const indexOfLeftParenthesis = hermesName.indexOf('(');\n  const name = indexOfLeftParenthesis !== -1 ? hermesName.substring(0, indexOfLeftParenthesis) : hermesName;\n  return name;\n}\n\nconst MS_TO_NS: number = 1e6;\n\n/**\n * Starts Hermes Sampling Profiler and returns the timestamp when profiling started in nanoseconds.\n */\nexport function startProfiling(): number | null {\n  const started = NATIVE.startProfiling();\n  if (!started) {\n    return null;\n  }\n\n  const profileStartTimestampNs = Date.now() * MS_TO_NS;\n  return profileStartTimestampNs;\n}\n\n/**\n * Stops Hermes Sampling Profiler and returns the profile.\n */\nexport function stopProfiling(): RawThreadCpuProfile | null {\n  const hermesProfile = NATIVE.stopProfiling();\n  if (!hermesProfile) {\n    return null;\n  }\n  return convertToSentryProfile(hermesProfile);\n}\n"]}