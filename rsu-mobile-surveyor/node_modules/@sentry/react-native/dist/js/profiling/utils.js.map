{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/js/profiling/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAI5D,MAAM,uBAAuB,GAAG,GAAG,CAAC;AAEpC;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,OAA4B;IACzD,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;QAC/B,IAAI,OAAO,EAAE;YACX,6EAA6E;YAC7E,8EAA8E;YAC9E,gEAAgE;YAChE,MAAM,CAAC,GAAG,CAAC,wEAAwE,CAAC,CAAC;SACtF;QACD,OAAO,KAAK,CAAC;KACd;IAED,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;QACvB,OAAO,KAAK,CAAC;KACd;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,oCAAoC,CAAC,QAAkB;IACrE,MAAM,MAAM,GAAY,EAAE,CAAC;IAE3B,mBAAmB,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;QAC3C,IAAI,IAAI,KAAK,aAAa,EAAE;YAC1B,OAAO;SACR;QAED,yBAAyB;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAEtB,8CAA8C;YAC9C,sEAAsE;YACtE,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,EAAE;gBACnG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAU,CAAC,CAAC;aAC/B;SACF;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,oBAAoB,CAAC,OAA4B,EAAE,KAAY;;IAC7E,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;QAC5B,OAAO,IAAI,CAAC;KACb;IAED,OAAO,oBAAoB,CAAC,OAAO,EAAE;QACnC,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,EAAE;QAC5B,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,EAAE;QACpC,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,EAAE;QAC9B,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,EAAE;QACpC,eAAe,EAAE,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;QAClF,QAAQ,EAAE,MAAC,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,0CAAE,KAAK,0CAAE,QAAmB,mCAAI,EAAE;QAC5D,sEAAsE;QACtE,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,WAAW,EAAE,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,EAAE,0CAAE,IAAI,KAAI,EAAE;QAC3C,UAAU,EAAE,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,EAAE,0CAAE,OAAO,KAAI,EAAE;QAC7C,QAAQ,EAAE,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,EAAE,0CAAE,KAAK,KAAI,EAAE;QACzC,aAAa,EAAE,CAAC,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,MAAM,0CAAE,MAAiB,KAAI,EAAE;QAC/D,YAAY,EAAE,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,MAAM,0CAAE,KAAK,KAAI,EAAE;QACjD,mBAAmB,EAAE,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,MAAM,0CAAE,YAAY,KAAI,EAAE;QAC/D,mBAAmB,EAAE,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,MAAM,0CAAE,IAAI,KAAI,EAAE;QACvD,kBAAkB,EAAE,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,MAAM,0CAAE,SAAS,KAAI,KAAK;KAC/D,CAAC,CAAC;AACL,CAAC;AAED;;;;;GAKG;AACH,SAAS,oBAAoB,CAC3B,UAA+B,EAC/B,EACE,OAAO,EACP,WAAW,EACX,QAAQ,EACR,WAAW,EACX,eAAe,EACf,QAAQ,EACR,UAAU,EACV,WAAW,EACX,UAAU,EACV,QAAQ,EACR,aAAa,EACb,YAAY,EACZ,mBAAmB,EACnB,mBAAmB,EACnB,kBAAkB,GAiBnB;IAED,0EAA0E;IAC1E,gFAAgF;IAChF,8DAA8D;IAC9D,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,EAAE,EAAE;QACtC,IAAI,OAAO,EAAE;YACX,MAAM,CAAC,GAAG,CAAC,gCAAgC,QAAQ,oBAAoB,CAAC,CAAC;SAC1E;KACF;IAED,MAAM,OAAO,GAAY;QACvB,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE;QAClD,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,GAAG;QACZ,OAAO,EAAE,OAAO;QAChB,WAAW,EAAE,WAAW;QACxB,OAAO,EAAE;YACP,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,EAAE,EAAE,2BAA2B;SACzC;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,QAAQ;SACvB;QACD,MAAM,EAAE;YACN,MAAM,EAAE,aAAa;YACrB,KAAK,EAAE,YAAY;YACnB,YAAY,EAAE,mBAAmB;YACjC,YAAY,EAAE,mBAAmB;YACjC,WAAW,EAAE,kBAAkB;SAChC;QACD,OAAO,EAAE,UAAU;QACnB,WAAW,EAAE;YACX,IAAI,EAAE,WAAW;YACjB,EAAE,EAAE,QAAQ;YACZ,QAAQ,EAAE,QAAQ,IAAI,EAAE;YACxB,gBAAgB,EAAE,uBAAuB;SAC1C;KACF,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,qBAAqB,CAAC,QAAkB,EAAE,QAAmB;IAC3E,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;QACpB,OAAO,QAAQ,CAAC;KACjB;IAED,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;QAC9B,oCAAoC;QACpC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;KAClD;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import type { Envelope, Event, Profile } from '@sentry/types';\nimport { forEachEnvelopeItem, logger } from '@sentry/utils';\n\nimport type { RawThreadCpuProfile } from './types';\n\nconst ACTIVE_THREAD_ID_STRING = '0';\n\n/**\n *\n */\nexport function isValidProfile(profile: RawThreadCpuProfile): profile is RawThreadCpuProfile & { profile_id: string } {\n  if (profile.samples.length <= 1) {\n    if (__DEV__) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.profile_id) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nexport function findProfiledTransactionsFromEnvelope(envelope: Envelope): Event[] {\n  const events: Event[] = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    // First item is the type\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j];\n\n      // @ts-expect-error accessing private property\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] as Event);\n      }\n    }\n  });\n\n  return events;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nexport function createProfilingEvent(profile: RawThreadCpuProfile, event: Event): Profile | null {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile, {\n    release: event.release || '',\n    environment: event.environment || '',\n    event_id: event.event_id || '',\n    transaction: event.transaction || '',\n    start_timestamp: event.start_timestamp ? event.start_timestamp * 1000 : Date.now(),\n    trace_id: (event?.contexts?.trace?.trace_id as string) ?? '',\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    profile_id: profile.profile_id,\n    os_platform: event.contexts?.os?.name || '',\n    os_version: event.contexts?.os?.version || '',\n    os_build: event.contexts?.os?.build || '',\n    device_locale: (event.contexts?.device?.locale as string) || '',\n    device_model: event.contexts?.device?.model || '',\n    device_manufacturer: event.contexts?.device?.manufacturer || '',\n    device_architecture: event.contexts?.device?.arch || '',\n    device_is_emulator: event.contexts?.device?.simulator || false,\n  });\n}\n\n/**\n * Create a profile\n * @param profile\n * @param options\n * @returns\n */\nfunction createProfilePayload(\n  cpuProfile: RawThreadCpuProfile,\n  {\n    release,\n    environment,\n    event_id,\n    transaction,\n    start_timestamp,\n    trace_id,\n    profile_id,\n    os_platform,\n    os_version,\n    os_build,\n    device_locale,\n    device_model,\n    device_manufacturer,\n    device_architecture,\n    device_is_emulator,\n  }: {\n    release: string;\n    environment: string;\n    event_id: string;\n    transaction: string;\n    start_timestamp: number;\n    trace_id: string | undefined;\n    profile_id: string;\n    os_platform: string;\n    os_version: string;\n    os_build?: string;\n    device_locale: string;\n    device_model: string;\n    device_manufacturer: string;\n    device_architecture: string;\n    device_is_emulator: boolean;\n  },\n): Profile {\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (trace_id && trace_id.length !== 32) {\n    if (__DEV__) {\n      logger.log(`[Profiling] Invalid traceId: ${trace_id} on profiled event`);\n    }\n  }\n\n  const profile: Profile = {\n    event_id: profile_id,\n    timestamp: new Date(start_timestamp).toISOString(),\n    platform: 'node',\n    version: '1',\n    release: release,\n    environment: environment,\n    runtime: {\n      name: 'hermes',\n      version: '', // TODO: get hermes version\n    },\n    os: {\n      name: os_platform,\n      version: os_version,\n      build_number: os_build,\n    },\n    device: {\n      locale: device_locale,\n      model: device_model,\n      manufacturer: device_manufacturer,\n      architecture: device_architecture,\n      is_emulator: device_is_emulator,\n    },\n    profile: cpuProfile,\n    transaction: {\n      name: transaction,\n      id: event_id,\n      trace_id: trace_id || '',\n      active_thread_id: ACTIVE_THREAD_ID_STRING,\n    },\n  };\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nexport function addProfilesToEnvelope(envelope: Envelope, profiles: Profile[]): Envelope {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    // @ts-expect-error untyped envelope\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n"]}