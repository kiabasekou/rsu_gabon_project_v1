# Generated by Django 5.0.8 on 2025-10-09 17:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="RSUUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrateur Système"),
                            ("SURVEYOR", "Enquêteur Terrain"),
                            ("SUPERVISOR", "Superviseur Régional"),
                            ("OPERATOR", "Opérateur Programme"),
                            ("ANALYST", "Analyste Données"),
                            ("AUDITOR", "Auditeur"),
                        ],
                        default="OPERATOR",
                        max_length=20,
                        verbose_name="Type d'utilisateur",
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="ID Employé",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Département",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=13,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format requis: +241XXXXXXXX",
                                regex="^\\+241[0-9]{8}$",
                            )
                        ],
                        verbose_name="Téléphone",
                    ),
                ),
                (
                    "assigned_provinces",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Provinces d'intervention autorisées",
                        verbose_name="Provinces assignées",
                    ),
                ),
                (
                    "current_location_lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Latitude actuelle",
                    ),
                ),
                (
                    "current_location_lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Longitude actuelle",
                    ),
                ),
                ("last_login_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("failed_login_attempts", models.PositiveIntegerField(default=0)),
                ("account_locked_until", models.DateTimeField(blank=True, null=True)),
                ("force_password_change", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_activity", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisateur RSU",
                "verbose_name_plural": "Utilisateurs RSU",
                "db_table": "rsu_users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Création"),
                            ("READ", "Consultation"),
                            ("UPDATE", "Modification"),
                            ("DELETE", "Suppression"),
                            ("LOGIN", "Connexion"),
                            ("LOGOUT", "Déconnexion"),
                            ("LOGIN_FAILED", "Échec Connexion"),
                            ("PASSWORD_CHANGE", "Changement Mot de Passe"),
                            ("ENROLLMENT", "Enrôlement Bénéficiaire"),
                            ("VALIDATION", "Validation Données"),
                            ("SYNC", "Synchronisation RBPP"),
                            ("EXPORT", "Export Données"),
                            ("IMPORT", "Import Données"),
                            ("DATA_ACCESS", "Accès Données Sensibles"),
                            ("ADMIN_ACTION", "Action Administrative"),
                            ("SYSTEM_CONFIG", "Configuration Système"),
                        ],
                        max_length=30,
                        verbose_name="Action",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "Faible"),
                            ("MEDIUM", "Moyenne"),
                            ("HIGH", "Élevée"),
                            ("CRITICAL", "Critique"),
                        ],
                        default="LOW",
                        max_length=10,
                        verbose_name="Gravité",
                    ),
                ),
                ("object_id", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "changes",
                    models.JSONField(
                        blank=True,
                        help_text="Détails des modifications (avant/après)",
                        null=True,
                        verbose_name="Modifications",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="Navigateur"),
                ),
                (
                    "session_key",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="Session"
                    ),
                ),
                (
                    "location_lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "location_lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modifié par",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log d'Audit",
                "verbose_name_plural": "Logs d'Audit",
                "db_table": "rsu_audit_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "action"], name="rsu_audit_l_user_id_6fee2a_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="rsu_audit_l_created_e5d980_idx"
                    ),
                    models.Index(
                        fields=["severity"], name="rsu_audit_l_severit_5df1df_idx"
                    ),
                ],
            },
        ),
    ]
